import{_ as n,e as s}from"./app.530372a1.js";const a={},p=s(`<h1 id="swift-\u7F51\u7EDC\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#swift-\u7F51\u7EDC\u8BF7\u6C42" aria-hidden="true">#</a> swift \u7F51\u7EDC\u8BF7\u6C42</h1><h3 id="\u4F7F\u7528moya\u6846\u67B6" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528moya\u6846\u67B6" aria-hidden="true">#</a> \u4F7F\u7528moya\u6846\u67B6</h3><div class="language-pod ext-pod line-numbers-mode"><pre class="language-pod"><code>pod &#39;Moya&#39;, &#39;~&gt; 15.0&#39;
# handyjson \u5904\u7406\u6570\u636E

pod &#39;HandyJSON&#39;,    &#39;5.0.3-beta&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u5B9A\u4E49\u4E00\u4E2Abaseapi" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u4E00\u4E2Abaseapi" aria-hidden="true">#</a> \u5B9A\u4E49\u4E00\u4E2ABaseAPI</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>
<span class="token keyword">import</span> <span class="token class-name">Moya</span>
<span class="token comment">/// \u6B64\u53C2\u6570\u5E94\u8BE5\u653E\u5728\u9879\u76EE\u7EDF\u4E00\u5B8F\u5B9A\u4E49\u4E2D, \u6839\u636E\u6D4B\u8BD5\u73AF\u5883, \u9884\u4E0A\u7EBF, \u6B63\u5F0F\u73AF\u5883\u5224\u65AD</span>
<span class="token keyword">private</span> <span class="token keyword">var</span> <span class="token constant">BASEURL</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;www.baidu.com&quot;</span></span>

<span class="token comment">///\u7F51\u7EDC\u8BF7\u6C42\u57FA\u7C7B, \u57FA\u7C7B\u53C2\u6570\u57FA\u672C\u56FA\u5B9A</span>
<span class="token keyword">class</span> <span class="token class-name">BaseAPI</span> <span class="token punctuation">{</span>
    <span class="token comment">///\u8BF7\u6C42\u57DF\u540D</span>
    <span class="token keyword">let</span> requestBaseUrl <span class="token operator">=</span> <span class="token constant">BASEURL</span>
    <span class="token comment">/// \u8BF7\u6C42\u516C\u53C2,token\u5565\u7684</span>
    <span class="token keyword">var</span> requestCommenParam<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">///\u8BF7\u6C42 header </span>
    <span class="token keyword">var</span> requestHeader<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">]</span><span class="token operator">?</span> <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Content-Type&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;text/plain&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;charset&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;utf-8&quot;</span></span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">///\u8BF7\u6C42\u8D85\u65F6\u65F6\u95F4</span>
    <span class="token keyword">var</span> requestTimeOut <span class="token operator">=</span> <span class="token number">30.0</span>
    
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="\u5B9A\u4E49\u81EA\u5DF1\u7684\u9879\u76EEapi\u7EE7\u627Fbaseapi" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u81EA\u5DF1\u7684\u9879\u76EEapi\u7EE7\u627Fbaseapi" aria-hidden="true">#</a> \u5B9A\u4E49\u81EA\u5DF1\u7684\u9879\u76EEapi\u7EE7\u627FbaseApi</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">class</span> <span class="token class-name">DemoAPI</span><span class="token punctuation">:</span> <span class="token class-name">BaseAPI</span> <span class="token punctuation">{</span>
    <span class="token comment">///\u8BF7\u6C42\u8DEF\u5F84</span>
    <span class="token keyword">var</span> requestPath<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>
    <span class="token comment">///\u8BF7\u6C42\u5F62\u53C2</span>
    <span class="token keyword">var</span> requestParam<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span><span class="token operator">?</span>
    <span class="token comment">///\u8BF7\u6C42\u65B9\u6CD5, \u9ED8\u8BA4 get</span>
    <span class="token keyword">var</span> requestMethod<span class="token punctuation">:</span> <span class="token class-name">Moya</span><span class="token punctuation">.</span><span class="token class-name">Method</span> <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">get</span>
<span class="token punctuation">}</span>
<span class="token keyword">extension</span> <span class="token class-name">DemoAPI</span> <span class="token punctuation">:</span> <span class="token class-name">TargetType</span> <span class="token punctuation">{</span>
    <span class="token comment">///\u57DF\u540D</span>
    <span class="token keyword">var</span> baseURL<span class="token punctuation">:</span> <span class="token constant">URL</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> requestBaseUrl<span class="token punctuation">)</span><span class="token operator">!</span> <span class="token punctuation">}</span>
    <span class="token comment">///\u8DEF\u5F84</span>
    <span class="token keyword">var</span> path<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
        <span class="token keyword">guard</span> <span class="token keyword">let</span> requestPath <span class="token operator">=</span> requestPath <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span> <span class="token punctuation">}</span>
        <span class="token keyword">return</span> requestPath
    <span class="token punctuation">}</span>
    <span class="token comment">///\u8BF7\u6C42\u65B9\u6CD5</span>
    <span class="token keyword">var</span> method<span class="token punctuation">:</span> <span class="token class-name">Moya</span><span class="token punctuation">.</span><span class="token class-name">Method</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> requestMethod
    <span class="token punctuation">}</span>
    <span class="token comment">///\u8BF7\u6C42\u4EFB\u52A1, \u5728\u6B64\u5408\u5E76\u516C\u53C2</span>
    <span class="token keyword">var</span> task<span class="token punctuation">:</span> <span class="token class-name">Task</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5408\u5E76\u8BF7\u6C42\u53C2\u6570\u4E0E\u516C\u53C2</span>
        <span class="token keyword">var</span> param<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
        <span class="token comment">// \u5148\u5408\u5E76\u516C\u53C2</span>
        param<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>requestCommenParam<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token short-argument">$1</span> <span class="token punctuation">}</span>
        <span class="token comment">// \u518D\u5408\u5E76\u5F62\u53C2, \u5982\u679C\u5F62\u53C2\u4E2D\u4E5F\u6709\u516C\u53C2\u76F8\u540C\u53C2\u6570, \u4F1A\u8986\u76D6\u6389\u516C\u53C2, \u4EE5\u5F62\u53C2\u4E3A\u4E3B</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> requestParam <span class="token operator">=</span> requestParam <span class="token punctuation">{</span>
            param<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>requestParam<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token short-argument">$1</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token function">requestParameters</span><span class="token punctuation">(</span>parameters<span class="token punctuation">:</span> param<span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token class-name">URLEncoding</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">)</span>
        
    <span class="token punctuation">}</span>
    <span class="token comment">/// header</span>
    <span class="token keyword">var</span> headers<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span> <span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">]</span><span class="token operator">?</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> requestHeader
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h3 id="\u5B9A\u4E49\u4E00\u4E2A\u8BF7\u6C42\u7BA1\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u4E00\u4E2A\u8BF7\u6C42\u7BA1\u7406\u5668" aria-hidden="true">#</a> \u5B9A\u4E49\u4E00\u4E2A\u8BF7\u6C42\u7BA1\u7406\u5668</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token class-name">Moya</span>
<span class="token keyword">import</span> <span class="token class-name">HandyJSON</span>
 
<span class="token comment">///\u7BA1\u7406\u6240\u6709\u6A21\u5757, \u79C1\u6709\u65B9\u6CD5, \u5B50\u8BF7\u6C42\u901A\u8FC7 extension \u5B9E\u73B0</span>
<span class="token keyword">class</span> <span class="token class-name">DemoRequestManager</span> <span class="token punctuation">{</span>
    
    
    <span class="token comment">/// \u6240\u6709\u6A21\u5757\u5747\u901A\u8FC7\u6B64\u65B9\u6CD5\u8BF7\u6C42\u6570\u636E</span>
    <span class="token comment">/// - **Parameters**:</span>
    <span class="token comment">///  - path: \u8DEF\u5F84</span>
    <span class="token comment">///  - method: method</span>
    <span class="token comment">///  - param: \u53C2\u6570</span>
    <span class="token comment">///  - done: \u8BF7\u6C42\u7ED3\u679C, \u6210\u529F\u6216\u8005\u5931\u8D25\u90FD\u901A\u8FC7\u6B64\u95ED\u5305\u56DE\u8C03</span>
    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">DemoRequestModule</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">HandyJSON</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> method<span class="token punctuation">:</span> <span class="token class-name">Moya</span><span class="token punctuation">.</span><span class="token class-name">Method</span> <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">,</span> param<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">,</span> done<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> succeed<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">,</span> <span class="token omit keyword">_</span> data<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//API</span>
        <span class="token keyword">let</span> api <span class="token operator">=</span> <span class="token class-name">RosettaAPI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        api<span class="token punctuation">.</span>requestPath <span class="token operator">=</span> path
        api<span class="token punctuation">.</span>requestParam <span class="token operator">=</span> param
        api<span class="token punctuation">.</span>requestMethod <span class="token operator">=</span> method
        <span class="token comment">//\u8BBE\u7F6E\u8D85\u65F6</span>
        <span class="token keyword">let</span> timeoutClosure <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>endpoint<span class="token punctuation">:</span> <span class="token class-name">Endpoint</span><span class="token punctuation">,</span> done<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token class-name">MoyaProvider</span><span class="token operator">&lt;</span><span class="token class-name">RosettaAPI</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token class-name">RequestResultClosure</span><span class="token punctuation">)</span> <span class="token keyword">in</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token keyword">var</span> request <span class="token operator">=</span> <span class="token keyword">try</span> endpoint<span class="token punctuation">.</span><span class="token function">urlRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                request<span class="token punctuation">.</span>timeoutInterval <span class="token operator">=</span> api<span class="token punctuation">.</span>requestTimeOut
                <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> provider <span class="token operator">=</span> <span class="token class-name">MoyaProvider</span><span class="token operator">&lt;</span><span class="token class-name">RosettaAPI</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>requestClosure<span class="token punctuation">:</span> timeoutClosure<span class="token punctuation">)</span>
        
        provider<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>api<span class="token punctuation">)</span> <span class="token punctuation">{</span> result <span class="token keyword">in</span>
            <span class="token comment">//\u5904\u7406\u7ED3\u679C</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">handleResult</span><span class="token punctuation">(</span>result<span class="token punctuation">:</span> result<span class="token punctuation">,</span> done<span class="token punctuation">:</span>done<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">/// \u54CD\u5E94\u6570\u636E\u5904\u7406</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">handleResult</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">HandyJSON</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>result<span class="token punctuation">:</span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">Moya</span><span class="token punctuation">.</span><span class="token class-name">Response</span><span class="token punctuation">,</span> <span class="token class-name">MoyaError</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> done<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> succeed<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">,</span> <span class="token omit keyword">_</span> data<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">switch</span> result <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">let</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">let</span> dic <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> response<span class="token punctuation">.</span><span class="token function">mapJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span><span class="token operator">?</span> <span class="token class-name">Dictionary</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">Any</span><span class="token operator">&gt;</span>
            <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token class-name">T</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> dic<span class="token punctuation">)</span>
            <span class="token comment">//\u8FC7\u6EE4\u63A5\u53E3\u6210\u529F\u72B6\u6001</span>
            <span class="token keyword">if</span> <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token class-name">T</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> dic<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u56DE\u8C03\u5230\u6570\u636E\u5C42</span>
                <span class="token function">done</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>
                
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u6253\u5370\u8BF7\u6C42\u9519\u8BEF\u4FE1\u606F</span>
                <span class="token function">done</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u6253\u5370\u8BF7\u6C42\u4FE1\u606F</span>
            <span class="token keyword">if</span> <span class="token keyword">let</span> request <span class="token operator">=</span> response<span class="token punctuation">.</span>request<span class="token punctuation">,</span>
               <span class="token keyword">let</span> method <span class="token operator">=</span> request<span class="token punctuation">.</span>method<span class="token punctuation">,</span>
               <span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> response<span class="token punctuation">.</span>data<span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;~~~~~~~~~~~Request Start~~~~~~~~~~~~&quot;</span></span><span class="token punctuation">)</span>
                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Method:</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">method<span class="token punctuation">.</span>rawValue</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">\\nURL:</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">request</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">\\nBody:</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token class-name">String</span><span class="token punctuation">(</span>describing<span class="token punctuation">:</span> request<span class="token punctuation">.</span>httpBody<span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">\\nResult:\\n</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">json</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;~~~~~~~~~~~Request End~~~~~~~~~~~~&quot;</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token keyword">let</span> error<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token comment">//\u7F51\u7EDC\u9519\u8BEF</span>
            <span class="token function">print</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
            <span class="token function">done</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><h3 id="\u6BD4\u5982\u8BF7\u6C42\u4E00\u4E2Abanner" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u5982\u8BF7\u6C42\u4E00\u4E2Abanner" aria-hidden="true">#</a> \u6BD4\u5982\u8BF7\u6C42\u4E00\u4E2Abanner</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">enum</span> <span class="token class-name">HomeApi</span><span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> banner <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/cms/banner&quot;</span></span> <span class="token comment">// banner\u56FE\u63A5\u53E3</span>
<span class="token punctuation">}</span>


<span class="token comment">/// \u591A\u4EBA\u534F\u52A9\u5F00\u53D1\u65F6, \u5F00\u53D1\u8005\u5728\u81EA\u5DF1\u7684\u6A21\u5757\u91CC\u521B\u5EFA extension \u5373\u53EF, \u7F16\u5199\u81EA\u5DF1\u6A21\u5757\u6240\u9700\u8981\u7684\u63A5\u53E3</span>
<span class="token keyword">extension</span> <span class="token class-name">DemoRequestManager</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u8BF7\u6C42banner\u6570\u636E</span>
    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">getBanner</span><span class="token punctuation">(</span>param<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">,</span> done<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token omit keyword">_</span> succeed<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token punctuation">,</span><span class="token omit keyword">_</span> data<span class="token punctuation">:</span> <span class="token class-name">BannerModels</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DemoRequestModule</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token class-name">HomeApi</span><span class="token punctuation">.</span>banner<span class="token punctuation">.</span>rawValue<span class="token punctuation">,</span> method<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">,</span> param<span class="token punctuation">:</span> param<span class="token punctuation">,</span> done<span class="token punctuation">:</span> done<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


# model \u4EE3\u7801
<span class="token keyword">import</span> <span class="token class-name">HandyJSON</span>

<span class="token keyword">struct</span> <span class="token class-name">BannerModel</span> <span class="token punctuation">:</span> <span class="token class-name">HandyJSON</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> id<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token operator">?</span>
    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>
    <span class="token keyword">var</span> imagePath<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>
<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token class-name">BannerModels</span> <span class="token punctuation">:</span><span class="token class-name">HandyJSON</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> obj<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">BannerModel</span><span class="token punctuation">]</span><span class="token operator">?</span>
    <span class="token keyword">var</span> success<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token operator">?</span>
    <span class="token keyword">var</span> msg<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token operator">?</span>
    <span class="token keyword">var</span> code<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>
    <span class="token keyword">var</span> version<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token operator">?</span>
    <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token operator">?</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="swift-webscoket\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#swift-webscoket\u94FE\u63A5" aria-hidden="true">#</a> swift webscoket\u94FE\u63A5</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">private</span> <span class="token keyword">let</span> urlSession <span class="token operator">=</span> <span class="token class-name">URLSession</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token keyword">var</span> webSocketTask<span class="token punctuation">:</span> <span class="token class-name">URLSessionWebSocketTask</span><span class="token operator">?</span>
<span class="token keyword">private</span> <span class="token keyword">let</span> baseURL <span class="token operator">=</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token class-name">BaseWsApi</span><span class="token punctuation">.</span>binance<span class="token punctuation">.</span>rawValue<span class="token punctuation">)</span><span class="token operator">!</span>


<span class="token comment">// \u8FDE\u63A5socket</span>
<span class="token keyword">func</span> <span class="token function-definition function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//        do {</span>
    <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    webSocketTask <span class="token operator">=</span> urlSession<span class="token punctuation">.</span><span class="token function">webSocketTask</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> baseURL<span class="token punctuation">)</span>
    webSocketTask<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">receiveMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">//        } catch {</span>
    <span class="token comment">//            self.getTradeCard()</span>
    <span class="token comment">//        }</span>
<span class="token punctuation">}</span>
    
<span class="token keyword">func</span> <span class="token function-definition function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    webSocketTask<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> <span class="token punctuation">.</span>goingAway<span class="token punctuation">,</span> reason<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
    
<span class="token comment">// \u53D1\u9001\u6D88\u606F</span>
<span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">sendMessage</span><span class="token punctuation">(</span>symbolPair<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//{&quot;method&quot;:&quot;SUBSCRIBE&quot;,&quot;params&quot;:[&quot;btcusdt@ticker&quot;],&quot;id&quot;:1}</span>
    <span class="token keyword">var</span> subTicker<span class="token punctuation">:</span><span class="token class-name">TickerSubModel</span> <span class="token operator">=</span> <span class="token class-name">TickerSubModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    subTicker<span class="token punctuation">.</span>params<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>symbolPair <span class="token operator">+</span> <span class="token string-literal"><span class="token string">&quot;@ticker&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> jsonData <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">JSONEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>subTicker<span class="token punctuation">)</span>
        <span class="token keyword">let</span> subString <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>decoding<span class="token punctuation">:</span> jsonData<span class="token punctuation">,</span> <span class="token keyword">as</span><span class="token punctuation">:</span> UTF8<span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span>
        <span class="token function">print</span><span class="token punctuation">(</span>subString<span class="token punctuation">)</span>
        <span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token class-name">URLSessionWebSocketTask</span><span class="token punctuation">.</span><span class="token class-name">Message</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>subString<span class="token punctuation">)</span>
        webSocketTask<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span> error <span class="token keyword">in</span>
            <span class="token keyword">if</span> <span class="token keyword">let</span> error <span class="token operator">=</span> error <span class="token punctuation">{</span>
                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;WebSocket couldn\u2019t send message because: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
        <span class="token function">print</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>localizedDescription<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
    
<span class="token comment">// \u63A5\u6536\u6D88\u606F\u5904\u7406</span>
<span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">receiveMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    webSocketTask<span class="token operator">?</span><span class="token punctuation">.</span>receive <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token keyword">weak</span> <span class="token keyword">self</span><span class="token punctuation">]</span> result <span class="token keyword">in</span>
        <span class="token keyword">switch</span> result <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token keyword">let</span> error<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Error in receiving message: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">let</span> str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token comment">//                    let json = String(data: Data(str.utf8), encoding: .utf8)</span>
                <span class="token keyword">let</span> bmodel <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">JSONDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">BinanceTickerModel</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token keyword">async</span><span class="token punctuation">{</span>
                    <span class="token keyword">self</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">addMarket</span><span class="token punctuation">(</span>bmodel<span class="token punctuation">:</span> bmodel<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                
            <span class="token punctuation">}</span> <span class="token keyword">catch</span>  <span class="token punctuation">{</span>
                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;error is </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">error<span class="token punctuation">.</span>localizedDescription</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            
            <span class="token keyword">self</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">receiveMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            
        <span class="token keyword">default</span><span class="token punctuation">:</span>
            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;default&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><h3 id="swift-\u539F\u751Fcodeable-\u89E3\u6790\u5230\u4E0D\u5B58\u5728\u7684\u503C-\u4E3Anil-\u60F3\u8981\u8D4B\u9ED8\u8BA4\u503C\u65F6\u9700\u8981\u6269\u5C55jsondecoder" tabindex="-1"><a class="header-anchor" href="#swift-\u539F\u751Fcodeable-\u89E3\u6790\u5230\u4E0D\u5B58\u5728\u7684\u503C-\u4E3Anil-\u60F3\u8981\u8D4B\u9ED8\u8BA4\u503C\u65F6\u9700\u8981\u6269\u5C55jsondecoder" aria-hidden="true">#</a> swift \u539F\u751Fcodeable \u89E3\u6790\u5230\u4E0D\u5B58\u5728\u7684\u503C \u4E3Anil\uFF0C\u60F3\u8981\u8D4B\u9ED8\u8BA4\u503C\u65F6\u9700\u8981\u6269\u5C55jsondecoder</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token keyword">extension</span> <span class="token class-name">KeyedDecodingContainer</span> <span class="token punctuation">{</span>
    <span class="token comment">// bool</span>
    <span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">decodeIfPresent</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> type<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">.</span><span class="token keyword">Type</span><span class="token punctuation">,</span> forKey key<span class="token punctuation">:</span> <span class="token class-name">K</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-&gt;</span> <span class="token class-name">Bool</span><span class="token operator">?</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token function">decode</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> forKey<span class="token punctuation">:</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> value
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// int</span>
    <span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">decodeIfPresent</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> type<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">.</span><span class="token keyword">Type</span><span class="token punctuation">,</span> forKey key<span class="token punctuation">:</span> <span class="token class-name">K</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-&gt;</span> <span class="token class-name">Int</span><span class="token operator">?</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token function">decode</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> forKey<span class="token punctuation">:</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> value
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// string</span>
    <span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">decodeIfPresent</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> type<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">Type</span><span class="token punctuation">,</span> forKey key<span class="token punctuation">:</span> <span class="token class-name">K</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span><span class="token operator">?</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token function">decode</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> forKey<span class="token punctuation">:</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> value
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="swift-moya-async-await-\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#swift-moya-async-await-\u8BF7\u6C42" aria-hidden="true">#</a> swift moya async + await \u8BF7\u6C42</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,17);function t(e,o){return p}var l=n(a,[["render",t],["__file","swiftnet.html.vue"]]);export{l as default};
